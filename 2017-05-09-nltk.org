#+BEGIN_EXPORT html
---
layout: post
title: NLTK
tagline: " gentle dissection"
permalink: /natural-language-processing/nltk/intro.html
categories: [nltk, intro]
tags: [nlp]
---
#+END_EXPORT

#+STARTUP: showall
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export

* NLTK source code tree

** Uppermost
   #+BEGIN_SRC sh :results output
   cd ../nltk/
   tree -L 1
   #+END_SRC

   #+RESULTS:
   #+begin_example
   .
   ├── AUTHORS.md
   ├── ChangeLog
   ├── CONTRIBUTING.md
   ├── INSTALL.txt
   ├── jenkins-job-config.xml
   ├── jenkins.sh
   ├── LICENSE.txt
   ├── Makefile
   ├── MANIFEST.in
   ├── nltk
   ├── pip-req.txt
   ├── README.md
   ├── RELEASE-HOWTO.txt
   ├── requirements-test.txt
   ├── setup.cfg
   ├── setup.py
   ├── tools
   ├── tox.ini
   └── web

   3 directories, 16 files
 #+end_example

** In depth =nltk=
   #+BEGIN_SRC sh :results output
   cd ../nltk/
   tree nltk -L 1
   #+END_SRC

   #+RESULTS:
   #+begin_example
   nltk
   ├── app
   ├── book.py
   ├── ccg
   ├── chat
   ├── chunk
   ├── classify
   ├── cluster
   ├── collections.py
   ├── collocations.py
   ├── compat.py
   ├── corpus
   ├── data.py
   ├── decorators.py
   ├── downloader.py
   ├── draw
   ├── featstruct.py
   ├── grammar.py
   ├── help.py
   ├── inference
   ├── __init__.py
   ├── internals.py
   ├── jsontags.py
   ├── lazyimport.py
   ├── metrics
   ├── misc
   ├── parse
   ├── probability.py
   ├── sem
   ├── sentiment
   ├── stem
   ├── tag
   ├── tbl
   ├── test
   ├── text.py
   ├── tgrep.py
   ├── tokenize
   ├── toolbox.py
   ├── translate
   ├── treeprettyprinter.py
   ├── tree.py
   ├── treetransforms.py
   ├── twitter
   ├── util.py
   ├── VERSION
   └── wsd.py

   21 directories, 24 files
#+end_example

*** =test=
    #+BEGIN_SRC sh :results output
    cd ../nltk/
    tree nltk/test -L 1
    #+END_SRC

    #+RESULTS:
    #+begin_example
    nltk/test
    ├── all.py
    ├── bleu.doctest
    ├── bnc.doctest
    ├── ccg.doctest
    ├── ccg_semantics.doctest
    ├── chat80.doctest
    ├── childes.doctest
    ├── childes_fixt.py
    ├── chunk.doctest
    ├── classify.doctest
    ├── classify_fixt.py
    ├── collocations.doctest
    ├── compat.doctest
    ├── compat_fixt.py
    ├── corpus.doctest
    ├── corpus_fixt.py
    ├── crubadan.doctest
    ├── data.doctest
    ├── dependency.doctest
    ├── discourse.doctest
    ├── discourse_fixt.py
    ├── doctest_nose_plugin.py
    ├── drt.doctest
    ├── featgram.doctest
    ├── featstruct.doctest
    ├── floresta.txt
    ├── framenet.doctest
    ├── FX8.xml
    ├── generate.doctest
    ├── gensim.doctest
    ├── gensim_fixt.py
    ├── gluesemantics.doctest
    ├── gluesemantics_malt.doctest
    ├── gluesemantics_malt_fixt.py
    ├── grammar.doctest
    ├── grammartestsuites.doctest
    ├── images
    ├── index.doctest
    ├── inference.doctest
    ├── inference_fixt.py
    ├── __init__.py
    ├── internals.doctest
    ├── japanese.doctest
    ├── logic.doctest
    ├── Makefile
    ├── metrics.doctest
    ├── misc.doctest
    ├── nonmonotonic.doctest
    ├── nonmonotonic_fixt.py
    ├── onto1.fol
    ├── paice.doctest
    ├── parse.doctest
    ├── portuguese.doctest_latin1
    ├── portuguese_en.doctest
    ├── portuguese_en_fixt.py
    ├── probability.doctest
    ├── probability_fixt.py
    ├── propbank.doctest
    ├── relextract.doctest
    ├── resolution.doctest
    ├── runtests.py
    ├── segmentation_fixt.py
    ├── sem3.cfg
    ├── semantics.doctest
    ├── semantics_fixt.py
    ├── sentiment.doctest
    ├── sentiwordnet.doctest
    ├── simple.doctest
    ├── stem.doctest
    ├── tag.doctest
    ├── tokenize.doctest
    ├── toolbox.doctest
    ├── toy.cfg
    ├── translate.doctest
    ├── translate_fixt.py
    ├── tree.doctest
    ├── treeprettyprinter.doctest
    ├── treetransforms.doctest
    ├── twitter.ipynb
    ├── unit
    ├── util.doctest
    ├── wordnet.doctest
    ├── wordnet_fixt.py
    ├── wordnet_lch.doctest
    └── wsd.doctest

    2 directories, 83 files
#+end_example

** In depth =tools=
   #+BEGIN_SRC sh :results output
   cd ../nltk/
   tree tools -L 1
   #+END_SRC

   #+RESULTS:
   : tools
   : ├── find_deprecated.py
   : ├── global_replace.py
   : ├── nltk_term_index.py
   : ├── nltk_term_index.stoplist
   : ├── run_doctests.py
   : └── svnmime.py
   : 
   : 0 directories, 6 files

** In depth =web=
   #+BEGIN_SRC sh :results output
   cd ../nltk/
   tree web -L 1
   #+END_SRC

   #+RESULTS:
   #+begin_example
   web
   ├── api
   ├── conf.py
   ├── contribute.rst
   ├── data.rst
   ├── dev
   ├── images
   ├── index.rst
   ├── install.rst
   ├── Makefile
   └── news.rst

   3 directories, 7 files
#+end_example
