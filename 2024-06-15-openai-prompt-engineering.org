#+BEGIN_EXPORT html
---
layout: page
title: Open AI
tagline: " installation and first glimpse"
permalink: /python/openai/installation.html
categories: [Python, OpenAI]
tags: [installation]
---
#+END_EXPORT
#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+PROPERTY: header-args :exports both
#+PROPERTY: header-args+ :results output pp
#+PROPERTY: header-args+ :eval no-export
#+PROPERTY: header-args+ :session prompt
#+TOC: headlines 2
* Intro
* GuideLines
** OpenAI for all users

Download and put the key at the bottom of ~/etc/environment~

#+begin_src sh
OPENAI_API_KEY="your_openai_api_key_here"
#+end_src

Replace `"your_openai_api_key_here"` with your actual OpenAI API
key. *The double quotes are necessary!*

** Check up the key accessibility

#+begin_src sh
  echo $OPENAI_API_KEY
#+end_src

** Separate virtual anvironment
Lets create and activate a separate ~venv~ for tinkering with Python
API for Open AI.

#+begin_src sh 
virtualenv ~/.local/OpenAI/
#+end_src

#+begin_src elisp :results none
  (pyvenv-activate "/home/alioth/.local/OpenAI/")
#+end_src

** Ensure venv activation

#+begin_src sh
  pip list
#+end_src

** Install the library into this ~venv~.

#+begin_src sh :results none
pip install openai
#+end_src

** Ensure installation

#+begin_src sh
pip list | grep openai
#+end_src

#+RESULTS:
: openai            1.34.0


* First glimpse

#+begin_src python
  from openai import OpenAI
  client = OpenAI()

  completion = client.chat.completions.create(
      model="gpt-3.5-turbo",
      temperature=0,
      messages=[
          {"role": "system", "content": "You are a poetic assistant, skilled in explaining complex programming concepts with creative flair."},
          {"role": "user", "content": "Compose a poem that explains the concept of recursion in programming."}
      ]
  )

  print(completion.choices[0].message.content)
#+end_src

#+RESULTS:
#+begin_example
In the realm of code, a concept profound,
Recursion dances, a cycle unbound.
A function that calls itself, again and again,
A mystical loop, a recursive refrain.

Like a mirror reflecting its own reflection,
Recursion dives deep, with no hesitation.
Breaking problems into smaller parts,
It unravels complexity, with elegant smarts.

A journey of function, a path so clear,
Each call brings us closer, with no fear.
Base case in sight, the cycle unwinds,
Recursion completes, a solution it finds.

So embrace the loop, the recursive flow,
In the world of programming, let it glow.
A poetic dance of logic and grace,
Recursion's beauty, in code's embrace.
#+end_example

* Have enjoy!
* Summarizing
* Inferring
* Transforming
* Expanding
* Chatbot
* Conclusion
