#+BEGIN_EXPORT html
---
layout: page
title: Organize Your Work
tagline: " with a minimum interruptions"
permalink: /professional/workflow_inside_org_mode.html
categories: [workflow, org-mode, effeciency, Emacs, Zettelkasten]
tags: [data gathering, data elaboration, notetaking]
---
#+END_EXPORT

#+STARTUP: showall indent
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export
#+CATEGORY: Workflow
#+TODO: RAW INIT TODO ACTIVE | DONE

* Preamble

Without a shadow of doubt the managing your task is a /meta-task/ that
vitally important to accomplish your job in a productive and effective
manner. I mean do it with sincere joy, playfully focusing on each
particular task and, of cause, with minimum silly interruptions. Yes,
it is silly to seek answer on such dumb question: "What I should do
next?" in the morning when you're much productive than ever. So, lets
dismantle several classical approaches to this quite delicate issue:

+ ToDo lists;
+ Time-table;
+ Calendar.

Arguably, but all these tools and a lot more are already inculuded
into the ~Emacs'~ ~Org-mode~ package, and all you're need to do - just
read its documentation. Yes, it is not easy to do, so we are on the
right path.

* A natrual way to make notes

Historically all this fuss around the notes has been successfully
resolved a million years in a row simply inside the one's
skull. Usually _Homo_ just remember what he wants to know in the
nearby future. Yes, this approach has a ton of caveats:

- Durability;
- Precision;
- Distortion;
- etc.

* A synthetic way of note-taking

Not so far /a literacy/ spreaded across a globe and nowadays in
particular every _Homo_ can read and write. So, literally it might be
implemented by a single ~master~ ToDo list for general tasks, and a
bundle of ~slave~ ToDo lists, connected and disconnected optionally,
depending on current job properties.

 + Task management;
 + Data gathering;
 + Data elaboration
 + Meta-analysys

* Emacs' standpoint

** The Org Agenda

#+begin_quote
Due to the way Org works, TODO items, time-stamped items, and tagged
headlines can be scattered throughout a file or even a number of
files.  To get an overview of open action items, or of events that are
important for a particular date, this information must be collected,
sorted and displayed in an organized way.
#+end_quote


#+begin_quote
Entries in the agenda buffer are linked back to the Org file or diary
file where they originate.  You are not allowed to edit the agenda
buffer itself, but commands are provided to show and jump to the
original entry location, and to edit the Org files “remotely” from the
agenda buffer.  In this way, all information is stored only once,
removing the risk that your agenda and note files may diverge.
#+end_quote

For a much detailed overview each item might be extendeid in a
separate buffer:

#+begin_quote
(‘org-agenda-tree-to-indirect-buffer’)
     Display the entire subtree of the current item in an indirect
     buffer.  With a numeric prefix argument N, go up to level N and
     then take that tree.  If N is negative, go up that many levels.
     With a ‘C-u’ prefix, do not remove the previously used indirect
     buffer.
#+end_quote

** Toolset

Separate EWW window for each task  -- does its history also splitted?
Does Desktop-Save saves their properties also?



Separate set of bookmarks for each task

* Average modes

** INIT Task management                                            :ARCHIVE:
SCHEDULED: <2022-11-22 Tue .+4d/5d>
:PROPERTIES:
:LAST_REPEAT: [2022-11-18 Fri 07:32]
:END:
- State "MAYBE"      from "ACTIVE"     [2022-11-18 Fri 07:32]
- Note taken on [2022-11-16 Wed 17:26] \\
  So it is neccessary to re-order =TODO= files and switch *Org-Agenda* on
  them.
:LOGBOOK:
CLOCK: [2022-11-15 Tue 19:02]--[2022-11-15 Tue 19:17] =>  0:15
CLOCK: [2022-11-15 Tue 19:02]--[2022-11-15 Tue 19:02] =>  0:00
:END:

Naturally it might be implemented by a single ~master~ ToDo list for
general tasks, and a bundle of ~slave~ ToDo lists, connected and
disconnected optionally, depending on current job properties.

[[info:org#Agenda Files][org#Agenda Files]]

*** Type of Tasks

It is convenient to classify the whole bunch of tasks by their nature
on several specific:

By age and maturity:

- Raw, which are only defined;
- Initial, which are accepted and scheduled;
- To-Do are gone through minor clarificatoin;
- Active is the status for primal tasks - they are decent enough to
  spend time on it.


- Regular, or repeatable or periodic;
- Irregular;

*** Re-scheduling the task

By typing ~S-right/left~ it is possible to move the schedule/deadline
date in the past or future at one day.

*** Prioritize the task

By typing ~S-up/down~ it is possible change the task's priority.

[[info:org#Priorities][org#Priorities]]

*** Change the task's state

Typing ~t~ will sequentially change the ~TODO~ state of the particular
item in the *Org-Agenda* buffer.

[[info:org#Workflow states][org#Workflow states]]
[[info:org#Multiple sets in one file][org#Multiple sets in one file]]

*** Make the task auto-repeatable

~++2d  .+1d .+2d/3d~

[[info:org#Tracking your habits][org#Tracking your habits]]

*** Annihilate the task

The most effective way to get rid of obvious litter is to kill them by
~C-k~ directly in the *Org-Agenda* buffer. It is the straight path to
~Ktulkh~.

** INIT [#B] Data gathering
SCHEDULED: <2022-11-24 Thu .+5d/6d>
:PROPERTIES:
:LAST_REPEAT: [2022-11-18 Fri 07:33]
:END:
- State "MAYBE"      from "ACTIVE"     [2022-11-18 Fri 07:33]
:LOGBOOK:
CLOCK: [2022-11-22 Tue 14:42]--[2022-11-22 Tue 15:02] =>  0:20
CLOCK: [2022-11-16 Wed 07:10]--[2022-11-16 Wed 07:36] =>  0:26
:END:

It would be successfully resolved utilizing innate =Org-mode= *capture.*
All what you need to unleash its real power is to configure its
templates for capturing where you're define how and where data will be
captured and stored.

[[info:org#Capture templates][org#Capture templates]]

** INIT Data elaboration
SCHEDULED: <2022-11-24 Thu>

** RAW Meta-analysys
SCHEDULED: <2022-11-24 Thu .+1w>
:PROPERTIES:
:CATEGORY: Meta
:END:

~C-h l~ history of Emacs' commands 
~agenda-log-mode~

** RAW Archiving
SCHEDULED: <2022-11-25 Fri .+1w>
:PROPERTIES:
:LAST_REPEAT: [2022-11-13 Sun 09:40]
:END:
- State "MAYBE"      from "ACTIVE"     [2022-11-13 Sun 09:40]
:LOGBOOK:
CLOCK: [2022-11-11 Fri 09:21]--[2022-11-11 Fri 09:50] =>  0:29
:END:

Sometimes it is convenient to declutter workspace and move some
particular task to archive temporarily or permanently.

*v A*
=Trees with :ARCHIVE: tag and all active archive files are included=
*v a*
=Trees with :ARCHIVE: tag are included=

So, it is possible to archive ~TODO~ items on the fly by tagging, and
moving them to another place by commands ~org-agenda-toggle-archive-tag~
and ~org-agenda-archive~ accordingly.

* Notes                                                      :noexport:notes:
 - GitHub.io with Jekyll data representation might be ideal for
   meta-analysys already collected data




