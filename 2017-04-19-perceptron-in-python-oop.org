#+BEGIN_EXPORT html
---
layout: post
title: Neural Network
tagline: " written in Python OOP"
permalink: /machine-learning/neural-network/oop-concept.html
categories: [machine learning, neural networks]
tags: [perceptron, oop]
---
#+END_EXPORT

#+STARTUP: showall
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports code :eval no-export

* Definition

** What is a neural network?
   #+BEGIN_QUOTE
   a computer system modelled on the human /brain/ and nervous system
   #+END_QUOTE

** What is brain?
   With no doubt it is a giant nebula (10^{14}) of nervous cells
   interconnected by 1.7 * 10^{8} meters of bound tissue.
   #+CAPTION: Interconnections
   #+ATTR_HTML: :alt How it looks like :title A raw sketch
   [[http://0--key.github.io/assets/img/neural_networks/white_matter.jpg]]

** What is a neuron?
   #+CAPTION: Neuron anatomy
   #+ATTR_HTML: :alt How it looks like :title A raw sketch
   [[http://0--key.github.io/assets/img/neural_networks/neuron_anatomy.jpg]]

   Nerve Cell: Dendrites receive messages from other neurons. The
   message then moves through the axon to the other end of the neuron,
   then to the tips of the axon and then into the space between
   neurons. From there the message can move to the next neuron.


* Implementation

** Inlet
   #+BEGIN_SRC python :session nn
     class Inlet(object):
         """Input signal into dendron"""
         def __init__(self):
             pass
         def modulate(self, signal):
             self.signal = signal
   #+END_SRC

** Dendron
   #+BEGIN_SRC python :session nn
     class Dendron(object):
         """Convey signal to neuron"""
         def __init__(self, neuron, inlet, weight=0.1):
             self.neuron = neuron
             self.weight = weight
             self.inlet = inlet
   #+END_SRC

   #+RESULTS:

** Soma
   #+BEGIN_SRC python :session nn
     class Neuron(object):
         """Processing module itself"""
         def __init__(self, df=lambda x: x):  # sigmoidal
             self.df = df
             self.dendrons = []
             self.output = 0
         def calculate_output(self):
             for dendron in self.dendrons:
                 self.output += self.df(
                     dendron.weight *
                     dendron.inlet.signal)
   #+END_SRC

   #+RESULTS:


* Scratches                                                        :noexport:
  In an initial form the perceptron is a single-layer neural
  network, which has no any hidden units among input and output.

