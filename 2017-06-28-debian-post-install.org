#+BEGIN_EXPORT html
---
layout: post
title: Debian 9 post-installation
tagline: " arrangement automation"
permalink: /debian/post-installation.html
categories: [Debian, DevEnv]
tags: [post-installation, arrangement, automation]
---
#+END_EXPORT

#+STARTUP: showall
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export

* Goal definition

  When you're dived in depth of software development with =Debian= as
  a main operational system sometimes it might emerge the urge to
  install it on a new host. As the current environment is homely and
  handy to use thus the aim is ~just to replicate~ it.


* Test launch
  
  First operation after successful installation is a test launch with

  #+BEGIN_EXAMPLE
  # dmesg -w
  #+END_EXAMPLE

  as an insurance procedure. As you might guess this is a ~debug
  messages~ output which allows to detect all kind of deviation at the
  early stages.

  And, as you might expect, if something goes wrong it should be
  written in to logs:

  #+BEGIN_EXAMPLE
  # ls -la /var/log/
  total 70024
  drwxr-xr-x  7 root              root           4096 Aug  5 00:05 .
  drwxr-xr-x 11 root              root           4096 Jul 10 15:27 ..
  -rw-r--r--  1 root              root              0 Aug  1 07:16 alternatives.log
  drwxr-xr-x  2 root              root           4096 Aug  3 13:31 apt
  -rw-r-----  1 root              adm        14083418 Aug  5 11:33 auth.log
  -rw-r--r--  1 root              root          50838 Jun 20 04:14 bootstrap.log
  -rw-rw----  1 root              utmp       21596928 Aug  5 11:33 btmp
  -rw-r-----  1 root              adm          251415 Aug  5 11:14 daemon.log
  -rw-r-----  1 root              adm           41298 Aug  5 09:51 debug
  -rw-r--r--  1 root              root          52316 Aug  3 13:32 dpkg.log
  -rw-r--r--  1 root              root          24072 Jul 11 17:56 faillog
  -rw-r--r--  1 root              root           7249 Jun 20 04:30 fontconfig.log
  drwx--x--x  2 root              Debian-gdm     4096 Jun  6 21:17 gdm3
  drwxr-xr-x  3 root              root           4096 Jul 10 15:31 installer
  -rw-r-----  1 root              adm          304134 Aug  5 11:16 kern.log
  -rw-rw-r--  1 root              utmp         292876 Aug  5 11:14 lastlog
  -rw-r-----  1 root              adm         2358943 Aug  5 11:16 messages
  drwx------  2 speech-dispatcher root           4096 Mar  6 00:13 speech-dispatcher
  -rw-r-----  1 root              adm           65851 Aug  5 11:17 syslog
  drwxr-x---  2 root              adm            4096 Aug  1 07:16 unattended-upgrades
  -rw-r-----  1 root              adm         2103293 Aug  5 10:07 user.log
  -rw-rw-r--  1 root              utmp          18048 Aug  5 11:14 wtmp
  -rw-r--r--  1 root              root            279 Jul 31 07:41 wvdialconf.log
  #+END_EXAMPLE

  Thus it would easy to catch a bug by tracing it through ~Debian 9~ logs.


* Kernel modules


* HDD health check-up

  *For notebook's HDD with ferromagnetic disks only*
  *Not suitable for SSD*

  The main issue with it is a ~number of load cycles~. It is a [[https://superuser.com/questions/840851/how-much-load-cycle-count-can-my-hard-drive-hypotethically-sustain][count]]
  of times when magnetic heads hided into the stress-safe position.
  This event is enough noisy usually, but to ensure that your drive
  works properly:

  - Install:
    #+BEGIN_EXAMPLE
    # apt-get install smartmontools
    #+END_EXAMPLE
  - Overview your =/dev/sdx=:
    #+BEGIN_EXAMPLE
    # smartctl -i /dev/sda
    # smartctl -A /dev/sda
    #+END_EXAMPLE
  - Check-up number:
    #+BEGIN_EXAMPLE
    # smartctl -A /dev/sda | grep Load
    #+END_EXAMPLE


  In case when this number grows dramatically fast, follow this link,
  please, to fix this issue.
  

* Software installation

  #+BEGIN_SRC sh
    apt-get install -y htop emacs25 gkrellm openssh-server virtualenv \
    sqlite3 mariadb-client mariadb-server
  #+END_SRC

* FileTree extension

  On my point of view the most convenient place to put some shared
  data on your ~Debian 9~ host is =/usr/local/share/=

** Check the existing folders
   #+BEGIN_SRC sh
   ls -la /usr/local/share/
   #+END_SRC

   #+RESULTS:
   #+begin_example
   total 52
   drwxrwsr-x 13 root   staff  4096 Jul 21 12:04 .
   drwxrwsr-x 10 root   staff  4096 Jul 10 15:22 ..
   drwxr-sr-x  3 root   staff  4096 Jul 21 12:04 anki
   drwxr-sr-x  2 root   staff  4096 Aug  2 06:31 applications
   drwxrwsr-x  2 root   staff  4096 Jun 20 04:18 ca-certificates
   drwxrwsr-x  4 root   staff  4096 Jul 10 17:23 emacs
   drwxrwsr-x  2 root   staff  4096 Jun 20 04:18 fonts
   drwxrwsr-x  3 root   staff  4096 Jul 21 12:04 man
   drwxr-sr-x  2 root   staff  4096 Jul 21 12:04 pixmaps
   drwxrwsr-x  7 root   staff  4096 Jul 10 15:22 sgml
   drwxrwsr-x  6 root   staff  4096 Jul 10 15:22 xml
 #+end_example

** Check-up user groups

   By default convention the user don't have wright access onto
   =/usr/local/=, [[https://wiki.debian.org/SystemGroups][but]] staff group is a special case:
   #+BEGIN_QUOTE
   staff: Allows users to add local modifications to the system
   (/usr/local) without needing root privileges...
   #+END_QUOTE

   Initially there are no users in it:

   #+BEGIN_SRC sh
   groups | grep staff
   echo "---"
   groups alioth | grep staff
   #+END_SRC

   #+RESULTS:
   : ---

*** Add user to group ~staff~

    #+BEGIN_EXAMPLE
    # usermod -aG staff alioth
    #+END_EXAMPLE

    *or* equivalent:

    #+BEGIN_EXAMPLE
    # adduser alioth staff
    #+END_EXAMPLE

*** *Re-login*

    To up-to-date group permissions.

*** And check groups now:
   
    #+BEGIN_SRC sh
    groups | grep staff
    echo "==="
    groups alioth | grep staff
    #+END_SRC

    #+RESULTS:
    : alioth cdrom floppy sudo audio dip video plugdev staff netdev bluetooth scanner
    : ===
    : alioth : alioth cdrom floppy sudo audio dip video plugdev staff netdev bluetooth scanner

*** Testing

    Is it possible to touch file in ~/usr/local/share/~ right now?
   
    #+BEGIN_SRC sh
    cd /usr/local/share/
    touch test.file.txt
    ls -la | grep test
    rm test.file.txt
    echo "++++"
    ls -la | grep test
    #+END_SRC

    #+RESULTS:
    : -rw-r--r--  1 alioth staff     0 Aug  2 18:39 test.file.txt
    : ++++

** Additional folders

   Now, when you're added into ~staff~ group it would be possible to
   execute all necessary commands as a current user. Let's create
   several additional folders for books, courses and repositories:

   #+BEGIN_SRC sh
   cd /usr/local/share/
   ls -la
   # mkdir books courses DVCS
   #+END_SRC

   #+RESULTS:
   #+begin_example
   total 52
   drwxrwsr-x 13 root   staff  4096 Aug  2 18:39 .
   drwxrwsr-x 10 root   staff  4096 Jul 10 15:22 ..
   drwxr-sr-x  3 root   staff  4096 Jul 21 12:04 anki
   drwxr-sr-x  2 root   staff  4096 Aug  2 06:31 applications
   drwxr-sr-x  2 alioth alioth 4096 Jul 10 18:20 books
   drwxrwsr-x  2 root   staff  4096 Jun 20 04:18 ca-certificates
   drwxr-sr-x  7 alioth alioth 4096 Jul 26 18:31 DVCS
   drwxrwsr-x  4 root   staff  4096 Jul 10 17:23 emacs
   drwxrwsr-x  2 root   staff  4096 Jun 20 04:18 fonts
   drwxrwsr-x  3 root   staff  4096 Jul 21 12:04 man
   drwxr-sr-x  2 root   staff  4096 Jul 21 12:04 pixmaps
   drwxrwsr-x  7 root   staff  4096 Jul 10 15:22 sgml
   drwxrwsr-x  6 root   staff  4096 Jul 10 15:22 xml
#+end_example

* Software development environment configuring

* Testing
