#+BEGIN_EXPORT html
---
layout: post
title: Dissecting Python
tagline: " inside out"
permalink: /python/book/introduction.html
categories: [Python Dissection]
tags: [book, intro]
---
#+END_EXPORT

#+STARTUP: showall
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t
#+TOC: headlines 2
#+PROPERTY:header-args :results output :exports both :eval no-export

* Gestation                                                        :noexport:

** General observations:
** Core ideas:

   - Conversion a boring manual into a fiction book;
   - Black (Pandorra) Box approach;
   - Programming languages genealogy:
     + Atavisms:
       + 72 char per string;
   - Codex as a phenomena disclosure;
   - Related material allocation on two pages at once;
   - Pomodoro technique realization;


** Primary material gathering;

*** Books

    - "Learning Python" & "Python Pocket Reference" by Mark Lutz
    - 

*** Quotes

    - "Programs must be written for people to read, and only incidentally  
     for machines to execute."

     Abelson & Sussman, SICP, preface to the first edition

    - "Short words are best and the old words when short are best of all."

      Winston Churchill

    - “The glass is neither half empty nor half full. It’s simply
      larger than it needs to be.”

      Grace Hopper

    - “Manage things. Lead people.”

      Grace Hopper

*** Snippets

*** Thoughts

    Why computer programming is a such tough task for humans? There
    are several plain predicatives to deem that is just overthinked.

**** 5 basic concepts of any programming language:

     - Variables;
     - Data structures;
     - Control structures;
     - Syntax;
     - Tools;


     
**** Major paradigms of programming:

     - Imperative;
     - Logical;
     - Functional;
     - Object-oriented;

       

     So, at the first glance all these concepts seem clear, dense and
     terse.

     
**** General observations:
     
     - Cognitive dissonance and size of manuals;
     - An average age of readers;
     - Avoidance of source code reading (escapism); 
     - Testing as an innate tool to learn for humans;
     - Testing in CS is a comparatively young concept;
     - Einstellung effect in writing book about programming;
     - Debugging is a major task for a typical programmer and often it
       consumes up to 90% of their efforts to develop and maintain
       software nowadays;



    
** Indexing as an ordered sequence;


** Wrapping and extension.


* Intro

  Even if any book can't be pretentious, this one doesn't. It is
  exactly the essense out of learning how to program machines to
  execute yours and only yours orders in a most effective way of
  studying: by sequentially, from the elementary ones to most complex,
  testing its features.


  The main paradigm of writing are clarity and density, so I take an
  attempt to unvail the TOC, wich is intentionally composed in a
  self-disclosure manner:


  TOC:
  - Intro
  - Quotes
  - General observations
  - Predicatives
    - Why Python
    - Why pure Python
  - Synthesis
    - Testing as a tool of ology
    - A dumb testing set (test the test itself)
    - Testing Python innate constants
      - Boolean operations
      - Ariphmetics
    - Innate types of data testing
    - Enter the Function
    - Enter the Object
	
  
* Quotes
    #+BEGIN_QUOTE
    Programs must be written for people to read, and only incidentally
      for machines to execute."
   #+HTML: <p align="right">
   - Abelson & Sussman, SICP, preface to the first edition
   #+HTML: </p>   
   #+END_QUOTE

   -----
   #+BEGIN_QUOTE
    "Short words are best and the old words when short are best of
      all."
   #+HTML: <p align="right">
   - Winston Churchill
   #+HTML: </p>   
   #+END_QUOTE

   -----

    #+BEGIN_QUOTE
    “The glass is neither half empty nor half full. It’s simply larger
      than it needs to be.”
   #+HTML: <p align="right">
   - Grace Hopper
   #+HTML: </p>   
   #+END_QUOTE

   -----

   #+BEGIN_QUOTE
    “Manage things. Lead people.”
   #+HTML: <p align="right">
   - Grace Hopper
   #+HTML: </p>   
   #+END_QUOTE

   -----



