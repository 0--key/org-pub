#+BEGIN_HTML
---
layout: post
title: Python emulates web-browser
tagline: " in Babel"
permalink: /emacs/spynner-on-Debian9.html
categories: [emacs, literate programming]
tags: [python3, emacs, spynner, installation, Debian9]
---
#+END_HTML
#+STARTUP: showall
#+OPTIONS: tags:nil num:nil \n:nil @:t ::t |:t ^:{} _:{} *:t

* Preamble
  From the [[https://github.com/makinacorpus/spynner][official repository]]
  #+BEGIN_QUOTE
  Spynner is a stateful programmatic web browser module for Python. It is based upon PyQT and WebKit.
  It supports Javascript, AJAX, and every other technology that !WebKit is able to handle (Flash, SVG, ...).
  Spynner takes advantage of JQuery. a powerful Javascript library that makes the interaction with pages
  and event simulation really easy.

  Using Spynner you would able to simulate a web browser with no GUI (though a browsing window can be
  opened for debugging purposes), so it may be used to implement crawlers or acceptance testing tools.

  See usage [[https://github.com/makinacorpus/spynner/tree/master/src/spynner/tests/spynner.rst][here]]
  #+END_QUOTE

  The main goal of this article is to install spynner with Python3 on
  your local host with =Debian9= OS.

* OS initial configuration

  ~Spynnner~ requres:
  - Python3.4
    + with SSL support;
  - 

** Downgrade your ~Python3~

   As a =modern= OS Debian9 contains ~Python3.5~ as the default
   ~Python3~ version. Yes it is most recent and most advanced than the
   previous ones, but ~Spynner~ is an oldfashion package and it is not
   compatible with ~Python3.5~ Lets install a reduced version of
   ~Python~ exactly for ~Spynner~ and its eco-system.

   # apt-get install valgrind libpng-dev libssl-dev libncurses5-dev \
   # libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-de

    #+BEGIN_SRC sh :results output :eval never-export
    cd /tmp/
    wget https://www.python.org/ftp/python/3.4.8/Python-3.4.8.tgz
    tar -xvf Python-3.4.8.tgz
    cd Python-3.4.8/
    ./configure --enable-shared --enable-loadable-sqlite-extensions --enable-ipv6 \                           
            --with-system-ffi --with-system-expat --with-signal-module --with-threads --with-valgrind \                                     
                --with-fpectl --with-ensurepip --prefix=/opt/python34

	make && make install
    #+END_SRC

    # echo "/opt/python34/lib" >> /etc/ld.so.conf.d/python34.conf
    # ldconfig

    Hence the rolled back version of ~Python~ now allocated in
    =/opt/python34/=:
    
    #+BEGIN_SRC sh :results output :eval never-export
    tree -L 2 /opt/python34/
    #+END_SRC

    #+RESULTS:
    #+begin_example
    /opt/python34/
    ├── bin
    │   ├── 2to3 -> 2to3-3.4
    │   ├── 2to3-3.4
    │   ├── idle3 -> idle3.4
    │   ├── idle3.4
    │   ├── pydoc3 -> pydoc3.4
    │   ├── pydoc3.4
    │   ├── python3 -> python3.4
    │   ├── python3.4
    │   ├── python3.4-config -> python3.4m-config
    │   ├── python3.4m
    │   ├── python3.4m-config
    │   ├── python3-config -> python3.4-config
    │   ├── pyvenv -> pyvenv-3.4
    │   └── pyvenv-3.4
    ├── include
    │   └── python3.4m
    ├── lib
    │   ├── libpython3.4m.so -> libpython3.4m.so.1.0
    │   ├── libpython3.4m.so.1.0
    │   ├── libpython3.so
    │   ├── pkgconfig
    │   └── python3.4
    └── share
	└── man

    8 directories, 17 files
    #+end_example


